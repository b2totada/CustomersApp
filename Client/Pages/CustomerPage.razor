@page "/customer"
@page "/customer/{id}"
@inject ICustomerService CustomerService

@if (Id == null)
{
	<PageTitle>Create a new customer</PageTitle>
	<h3>Create a new customer</h3>
}
else
{
	<PageTitle>Edit: @customer.FirstName @customer.LastName</PageTitle>
	<h3>Edit: @customer.FirstName @customer.LastName</h3>

}

<EditForm Model="customer" OnSubmit="HandleSubmit">
	<div>
		<label for="id">Id</label>
		<InputText id="id" @bind-Value="customer.Id" class="form-control"></InputText>
	</div>
	<div>
		<label for="firstname">First Name</label>
		<InputText id="firstname" @bind-Value="customer.FirstName" class="form-control"></InputText>
	</div>
	<div>
		<label for="lastname">Last Name</label>
		<InputText id="lastname" @bind-Value="customer.LastName" class="form-control"></InputText>
	</div>
	<div>
		<label for="tel">Tel</label>
		<InputText id="tel" @bind-Value="customer.Tel" class="form-control"></InputText>
	</div>
	<div>
		<label for="address">Address</label>
		<InputText id="address" @bind-Value="customer.Address" class="form-control"></InputText>
	</div>
	<div>
		<label>Category</label><br />
		<InputSelect @bind-Value="customer.CategoryId" class="form-select">
			@foreach (var category in CustomerService.Categories)
			{
				<option value="@category.Id">@category.Name</option>
			}
		</InputSelect>
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@btnText</button>
	<button type="button" class="btn btn-danger" @onclick="DeleteCustomer">Delete customer</button>
</EditForm>

@code {
	[Parameter]
	public string Id { get; set; }

	string btnText = string.Empty;

	Customer customer = new Customer { Category = new CustomerCategory() };

	protected override async Task OnInitializedAsync()
	{
		btnText = Id == null ? "Save new customer" : "Update customer";
		await CustomerService.GetCategories();
	}

	protected override async Task OnParametersSetAsync()
	{
		if (Id == null)
		{
			customer.Category = CustomerService.Categories[0];
			customer.CategoryId = customer.Category.Id;
		}
		else
		{
			customer = await CustomerService.GetSingleCustomer((string)Id);
		}
	}

	async Task HandleSubmit()
	{
		if (Id == null)
		{
			await CustomerService.CreateCustomer(customer);
		}
		else
		{
			await CustomerService.UpdateCustomer(customer);
		}
	}

	async Task DeleteCustomer()
	{
		await CustomerService.DeleteCustomer(customer.Id);
	}
}
